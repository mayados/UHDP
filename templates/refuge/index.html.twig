{% extends 'base.html.twig' %}

{% block title %}Refuges{% endblock %}

{% block body %}

<div class="container-page js-refresh-page">
    <section id="banniere-refuges">
        <h1>Refuges</h1>
    </section>

    <div id="map"></div>

</div>
<script>
    // Création d'une carte : initialisation et indication des coordonnées géographiques et du niveau de zoom
    //  setView() return l'objet map
    //  On indique [latitude, longitude]
    var map = L.map('map').setView([48.584614, 7.7507127], 12);

    var myIcon = L.icon({
        iconUrl: "{{ asset('img/pointer.png')}}",
        iconSize: [25, 40],
        iconAnchor: [22, 94],
        popupAnchor: [-3, -76],
        // shadowUrl: 'my-icon-shadow.png',
        // shadowSize: [68, 95],
        shadowAnchor: [22, 94]
    });

    // Ajout d'un tile layer : on indique la 
    L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
        // Il faut mentionner d'où nous l'avons pris. Ici, ça provient d'OpenStreetMap
        attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>',
        // Le zoom maximum qu'un utilisateur pourra faire
        maxZoom: 19,
    }).addTo(map);

     fetch("http://127.0.1:8000/api/refuges")
        // On crée une variable réponse par rapport aux éléments du dessus, qui va être transformée en json
    .then( (response) => response.json())
        // On donne un nom de variable pour récupérer les données
    .then( (data)=> {
       var datas = data["hydra:member"];
        let refuges = [];
        for(let i = 0; i < datas.length; i++){
            var refuge = datas[i]
            refuges.push(refuge)
        }
        console.log(refuges)

        var markers = L.markerClusterGroup();
        var bounds = L.latLngBounds()

        refuges.forEach(refuge => {

            var numero = "";
            if(refuge.numero != undefined){
                numero = refuge.numero
            }else{
                numero = "";
            }
            console.log(refuge.nom)
            
            var refugePoint = L.marker([refuge.latitude, refuge.longitude], {icon : myIcon}).addTo(map);
            bounds.extend([refuge.latitude, refuge.longitude])
            markers.addLayer(refugePoint.bindPopup("<b>"+refuge.nom+"</b><br>"+numero+" "+refuge.rue+"<br>"+refuge.codePostal+" "+refuge.ville+"<br>Site: <a href='"+refuge.site+"' target='_blank'>"+refuge.site+"</a>"))
        })

        map.addLayer(markers);
        // fitBounds permet d'afficher directement le rayon que couvrent les différents marqueurs : tous les marqueurs seront visibles de suite
       map.fitBounds(bounds)

    })   
</script>
{% endblock %}
